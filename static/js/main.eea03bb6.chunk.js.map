{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","users","filteredUsers","sortedUsers","mod","axios","get","then","data","console","log","setState","results","value","filtered","this","filter","user","name","first","toLowerCase","last","includes","type","sorted","sort","a","b","fullnameA","fullnameB","phone","className","style","textAlign","onChange","event","filterData","target","margin","width","placeholder","scope","onClick","sortData","map","src","picture","medium","email","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAkGeA,E,4MA9FbC,MAAQ,CACNC,MAAO,GACPC,cAAe,GACfC,YAAa,GACbC,IAAK,G,kEAGc,IAAD,OAClBC,IACGC,IAAI,iDACJC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEV,MAAOO,EAAKI,QAASV,cAAeM,EAAKI,QAAST,YAAYK,EAAKI,e,iCAI9EC,GAET,IAAMC,EAAWC,KAAKf,MAAMC,MAAMe,QAAO,SAACC,GAIxC,OAFEA,EAAKC,KAAKC,MAAMC,cAAgB,IAAMH,EAAKC,KAAKG,KAAKD,eAEvCE,SAAST,MAG3BE,KAAKJ,SAAS,CAAET,cAAeY,EAAUX,YAAaW,M,+BAG/CS,GAAO,IACVC,EADS,OAEA,SAATD,IACFC,EAAST,KAAKf,MAAME,cAAcuB,MAAK,SAACC,EAAGC,GACzC,IAAMC,EACJF,EAAER,KAAKC,MAAMC,cAAgB,IAAMM,EAAER,KAAKG,KAAKD,cAC3CS,EACJF,EAAET,KAAKC,MAAMC,cAAgB,IAAMO,EAAET,KAAKG,KAAKD,cACjD,OAAIQ,EAAYC,GAAmB,EAAE,EAAK7B,MAAMI,IAC5CwB,EAAYC,EAAkB,EAAE,EAAK7B,MAAMI,IACxC,MAGE,UAATmB,IACFC,EAAST,KAAKf,MAAME,cAAcuB,MAAK,SAACC,EAAEC,GAAH,OAAQD,EAAEI,MAAQH,EAAEG,OAAS,EAAE,EAAK9B,MAAMI,IAAMsB,EAAEI,MAAQH,EAAEG,MAAQ,EAAE,EAAK9B,MAAMI,IAAM,MAEhIW,KAAKJ,SAAS,CAACR,YAAYqB,EAAQpB,KAAMW,KAAKf,MAAMI,Q,+BAG5C,IAAD,OACP,OACE,qCACE,qBAAK2B,UAAU,YAAf,SACE,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,kCAEF,uBACEC,SAAU,SAACC,GAAD,OACR,EAAKC,WAAWD,EAAME,OAAOxB,MAAMO,gBAErCW,UAAU,oBACVC,MAAO,CAAEM,OAAQ,OAAQC,MAAO,OAChCC,YAAY,uBAEd,wBAAOT,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIU,MAAM,QACV,oBAAIC,QAAS,kBAAM,EAAKC,SAAS,SAASF,MAAM,MAAMV,UAAU,eAAhE,kBAGA,oBAAIU,MAAM,MAAMV,UAAU,eAA1B,mBACA,oBAAIW,QAAS,kBAAM,EAAKC,SAAS,UAAUF,MAAM,MAAMV,UAAU,eAAjE,wBAGJ,gCACGhB,KAAKf,MAAMG,YAAYyC,KAAI,SAAC3B,GAC3B,OACE,+BACE,oBAAIwB,MAAM,MAAV,SACE,qBAAKI,IAAK5B,EAAK6B,QAAQC,WAEzB,+BACG9B,EAAKC,KAAKC,MADb,IACqBF,EAAKC,KAAKG,QAE/B,6BAAKJ,EAAK+B,QACV,6BAAK/B,EAAKa,UARHb,EAAKC,KAAKC,MAAQF,EAAKC,KAAKG,qB,GA5EnC4B,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eea03bb6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Component } from \"react\";\n\nclass App extends Component {\n  state = {\n    users: [],\n    filteredUsers: [],\n    sortedUsers: [],\n    mod: 1\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://randomuser.me/api/?results=100&nat=us\")\n      .then(({ data }) => {\n        console.log(data);\n        this.setState({ users: data.results, filteredUsers: data.results, sortedUsers:data.results });\n      });\n  }\n\n  filterData(value) {\n    //get a filtered list of users from value\n    const filtered = this.state.users.filter((user) => {\n      const fullname =\n        user.name.first.toLowerCase() + \" \" + user.name.last.toLowerCase();\n      //return true if user.name.first includes the value or user.name.last includes the value\n      return fullname.includes(value);\n    });\n    //set state with new filtered array\n    this.setState({ filteredUsers: filtered, sortedUsers: filtered });\n  }\n\n  sortData(type) {\n    let sorted;\n    if (type === \"name\") {\n      sorted = this.state.filteredUsers.sort((a, b) => {\n        const fullnameA =\n          a.name.first.toLowerCase() + \" \" + a.name.last.toLowerCase();\n        const fullnameB =\n          b.name.first.toLowerCase() + \" \" + b.name.last.toLowerCase();\n        if (fullnameA < fullnameB) return -1*this.state.mod;\n        if (fullnameA > fullnameB) return 1*this.state.mod;\n        return 0;\n      });\n    }\n    if (type === \"phone\"){\n      sorted = this.state.filteredUsers.sort((a,b)=> a.phone < b.phone ? -1*this.state.mod : a.phone > b.phone ? 1*this.state.mod : 0)\n    }\n    this.setState({sortedUsers:sorted, mod: -this.state.mod})\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"jumbotron\">\n          <h1 style={{ textAlign: \"center\" }}>Employee Directory</h1>\n        </div>\n        <input\n          onChange={(event) =>\n            this.filterData(event.target.value.toLowerCase())\n          }\n          className=\"form-control mb-5\"\n          style={{ margin: \"auto\", width: \"60%\" }}\n          placeholder=\"search an employee\"\n        />\n        <table className=\"table table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\"></th>\n              <th onClick={() => this.sortData(\"name\")} scope=\"col\" className=\"align-middle\">\n                Name\n              </th>\n              <th scope=\"col\" className=\"align-middle\">Email</th>\n              <th onClick={() => this.sortData(\"phone\")} scope=\"col\" className=\"align-middle\">Phone</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.sortedUsers.map((user) => {\n              return (\n                <tr key={user.name.first + user.name.last}>\n                  <th scope=\"row\">\n                    <img src={user.picture.medium} />\n                  </th>\n                  <td>\n                    {user.name.first} {user.name.last}\n                  </td>\n                  <td>{user.email}</td>\n                  <td>{user.phone}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}